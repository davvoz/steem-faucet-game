rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funzioni di utilità
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Versione migliorata della funzione isAdmin
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Funzione temporanea per permettere l'accesso all'indirizzo email specifico dell'admin
    function isAdminEmail() {
      return isSignedIn() && 
        (request.auth.token.email == "ing.casaert@gmail.com" || 
         request.auth.token.email_verified && request.auth.token.email.matches(".*@tuodominio\\.com"));
    }
    
    function canModifyUser(userId) {
      return isOwner(userId) || isAdmin() || isAdminEmail();
    }

    // Regole per documenti utente
    match /users/{userId} {
      // Lettura più permissiva per debugging
      allow read: if isSignedIn();
      
      // Creazione più permissiva
      allow create: if isSignedIn();
      
      // Aggiornamento più permissivo per admin
      allow update: if isOwner(userId) || isAdmin() || isAdminEmail();
      
      // Altri utenti hanno restrizioni
      allow update: if isOwner(userId) && 
                   !request.resource.data.diff(resource.data).affectedKeys()
                    .hasAny(['lastFaucetClaim', 'consecutiveClaims', 'faucetTier', 'totalClaimedAmount', 'isAdmin']);
    }
    
    // Regole per richieste faucet
    match /faucet_claims/{claimId} {
      // Lettura più permissiva per debugging
      allow read: if isSignedIn();
      
      // Creazione controllata ma più permissiva
      allow create: if isSignedIn() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Aggiornamento più permissivo per admin
      allow update: if isAdmin() || isAdminEmail() || isOwner(request.resource.data.userId);
    }
    
    // Regole per statistiche
    match /stats/faucet {
      // Tutti possono leggere le statistiche
      allow read: if true;
      
      // Scrittura più permissiva per admin
      allow write: if isAdmin() || isAdminEmail();
    }
    
    // Regola per tutti gli altri documenti - più permissiva per debugging temporaneo
    match /{document=**} {
      allow read: if isSignedIn();
      allow write: if isAdmin() || isAdminEmail();
    }
  }
}